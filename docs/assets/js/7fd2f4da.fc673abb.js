"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[864],{3905:function(e,a,t){t.d(a,{Zo:function(){return m},kt:function(){return u}});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),p=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},m=function(e){var a=p(e.components);return n.createElement(s.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=p(t),u=r,h=d["".concat(s,".").concat(u)]||d[u]||c[u]||l;return t?n.createElement(h,o(o({ref:a},m),{},{components:t})):n.createElement(h,o({ref:a},m))}));function u(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4738:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return m},default:function(){return d}});var n=t(7462),r=t(3366),l=(t(7294),t(3905)),o=["components"],i={sidebar_position:12},s="A. How to change namespace in case there is release already running in the default namespace - parallel option",p={unversionedId:"manual/change-namespace-for-xlr-10.3-with-parallel",id:"manual/change-namespace-for-xlr-10.3-with-parallel",isDocsHomePage:!1,title:"A. How to change namespace in case there is release already running in the default namespace - parallel option",description:"Prerequisites",source:"@site/docs/manual/change-namespace-for-xlr-10.3-with-parallel.md",sourceDirName:"manual",slug:"/manual/change-namespace-for-xlr-10.3-with-parallel",permalink:"/xl-release-kubernetes-operator/docs/manual/change-namespace-for-xlr-10.3-with-parallel",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"tutorialSidebar",previous:{title:"[Deprecated] How to change namespace in case there is release already running in the default namespace (parallel option)",permalink:"/xl-release-kubernetes-operator/docs/manual/change-namespace-for-xlr-10.3"},next:{title:"B. How to change namespace in case there is release already running in the default namespace - with downtime",permalink:"/xl-release-kubernetes-operator/docs/manual/change-namespace-for-xlr-10.3-with-downtime"}},m=[{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"Steps to setup operator on the custom namespace",id:"steps-to-setup-operator-on-the-custom-namespace",children:[{value:"A.1. Create custom namespace",id:"a1-create-custom-namespace",children:[],level:3},{value:"A.2. Backup everything on cluster",id:"a2-backup-everything-on-cluster",children:[],level:3},{value:"A.3. Prepare the release operator",id:"a3-prepare-the-release-operator",children:[],level:3},{value:"A.3. Update the release operator package to support custom namespace (common part)",id:"a3-update-the-release-operator-package-to-support-custom-namespace-common-part",children:[],level:3},{value:"A.4.a. Update the release operator package to support custom namespace - only in case of Nginx ingress controller",id:"a4a-update-the-release-operator-package-to-support-custom-namespace---only-in-case-of-nginx-ingress-controller",children:[],level:3},{value:"A.4.b. Update the release operator package to support custom namespace - only in case of Haproxy ingress controller",id:"a4b-update-the-release-operator-package-to-support-custom-namespace---only-in-case-of-haproxy-ingress-controller",children:[],level:3},{value:"A.5. Update additionally YAML files",id:"a5-update-additionally-yaml-files",children:[],level:3},{value:"A.6. Be sure to not delete PVs",id:"a6-be-sure-to-not-delete-pvs",children:[],level:3},{value:"A.7. Copy existing PVCs to the custom namespace",id:"a7-copy-existing-pvcs-to-the-custom-namespace",children:[],level:3},{value:"A.8. Deploy to the custom namespace",id:"a8-deploy-to-the-custom-namespace",children:[],level:3},{value:"A.9. Apply any custom changes",id:"a9-apply-any-custom-changes",children:[],level:3},{value:"A.10. Wrap-up",id:"a10-wrap-up",children:[{value:"A.11. Destroy XLR in default namespace",id:"a11-destroy-xlr-in-default-namespace",children:[],level:4}],level:3}],level:2}],c={toc:m};function d(e){var a=e.components,t=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"a-how-to-change-namespace-in-case-there-is-release-already-running-in-the-default-namespace---parallel-option"},"A. How to change namespace in case there is release already running in the default namespace - parallel option"),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The kubectl command-line tool"),(0,l.kt)("li",{parentName:"ul"},"Access to a Kubernetes cluster with installed Release in the ",(0,l.kt)("inlineCode",{parentName:"li"},"default")," namespace")),(0,l.kt)("p",null,"Tested with:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"xl-deploy 22.1.2"),(0,l.kt)("li",{parentName:"ul"},"xl-release 10.3.5 upgraded to 22.1.2"),(0,l.kt)("li",{parentName:"ul"},"xl-cli 22.1.2"),(0,l.kt)("li",{parentName:"ul"},"Azure cluster")),(0,l.kt)("p",null,"If you have already setup of the XLR default namespace it is possible to move the deployment to the custom namespace. Here we will use for example\n",(0,l.kt)("inlineCode",{parentName:"p"},"custom-namespace-1"),"."),(0,l.kt)("p",null,"In the example we will use XLR 10.3 that will be upgraded to 22.1.2 version with latest 22.1.x operator image xebialabsunsupported/release-operator:22.1.0-519.949 from the\n",(0,l.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/xebialabsunsupported/release-operator/tags"},"https://hub.docker.com/r/xebialabsunsupported/release-operator/tags")," and latest operator\npackage from the 22.1.x branch."),(0,l.kt)("h2",{id:"steps-to-setup-operator-on-the-custom-namespace"},"Steps to setup operator on the custom namespace"),(0,l.kt)("p",null,"With following steps you will setup XLR in the custom namespace, in ",(0,l.kt)("strong",{parentName:"p"},"parallel")," with running current setup in the ",(0,l.kt)("inlineCode",{parentName:"p"},"default")," namespace."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Before doing any of the following steps backup everything:"),(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"database data"),(0,l.kt)("li",{parentName:"ul"},"any custom configuration that was done for the operator setup"),(0,l.kt)("li",{parentName:"ul"},"any volume related to release in the default namespace, for example data from the mounted volumes on the release pod:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-release-server/reports"),(0,l.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-release-server/ext"),(0,l.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-release-server/conf")))))),(0,l.kt)("h3",{id:"a1-create-custom-namespace"},"A.1. Create custom namespace"),(0,l.kt)("p",null,"Setup custom namespace on Kubernetes cluster, ",(0,l.kt)("inlineCode",{parentName:"p"},"custom-namespace-1")," for example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u276f kubectl create namespace custom-namespace-1\n")),(0,l.kt)("p",null,"Replace ",(0,l.kt)("inlineCode",{parentName:"p"},"custom-namespace-1")," name in this and following steps with your custom namespace name."),(0,l.kt)("h3",{id:"a2-backup-everything-on-cluster"},"A.2. Backup everything on cluster"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Collect all custom changes that are done in the ",(0,l.kt)("inlineCode",{parentName:"li"},"default")," namespace for XLR resources",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"StatefulSets"),(0,l.kt)("li",{parentName:"ul"},"Deployments"),(0,l.kt)("li",{parentName:"ul"},"ConfigMaps"),(0,l.kt)("li",{parentName:"ul"},"Secrets"),(0,l.kt)("li",{parentName:"ul"},"CustomResource"),(0,l.kt)("li",{parentName:"ul"},"anything else that was customized"))),(0,l.kt)("li",{parentName:"ol"},"Collect any other change that was done during initial setup according to the\n",(0,l.kt)("a",{parentName:"li",href:"https://docs.xebialabs.com/v.22.1/deploy/how-to/k8s-operator/install-deploy-using-k8s-operator/#installing-deploy-on-azure-kubernetes-service"},"https://docs.xebialabs.com/v.22.1/deploy/how-to/k8s-operator/install-deploy-using-k8s-operator/#installing-deploy-on-azure-kubernetes-service")),(0,l.kt)("li",{parentName:"ol"},"If you are using your own database and messaging queue setup, do the data backup.")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Note:\nAny data migration is out of scope of this document. For example in case of database data migration, check with your DB admins what to do in that case.\nFor the external database case the best option is to migrate database to a new database schema, and use that schema on the new namespace."))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Note:\nCheck if configuration on the new namespace is using same host as on ",(0,l.kt)("inlineCode",{parentName:"p"},"default")," namespace.\nIn that case you will need to execute step 9.a to be able to access XLR pages before accessing the XLR pages."))),(0,l.kt)("h3",{id:"a3-prepare-the-release-operator"},"A.3. Prepare the release operator"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Get the release operator package zip for Azure: release-operator-azure-aks-22.1.1-517.1301.zip (correct operator image is already setup in the package)."),(0,l.kt)("li",{parentName:"ol"},"Do the step 6 from the documentation ",(0,l.kt)("a",{parentName:"li",href:"https://docs.xebialabs.com/v.22.1/deploy/how-to/k8s-operator/install-deploy-using-k8s-operator/#step-7set-up-the-xl-deploy-container-instance-1"},"Step 7\u2014Set up the XL Deploy Container instance"),"\nUse the 22.1.2 version of the deploy: ",(0,l.kt)("inlineCode",{parentName:"li"},'docker run -d -e "ADMIN_PASSWORD=admin" -e "ACCEPT_EULA=Y" -p 4516:4516 --name xld xebialabs/xl-deploy:22.1.2')),(0,l.kt)("li",{parentName:"ol"},"Download and set up the XL CLI setup (xl cli version in this case 22.1.2) from ",(0,l.kt)("a",{parentName:"li",href:"https://dist.xebialabs.com/public/xl-cli/22.1.2/"},"https://dist.xebialabs.com/public/xl-cli/22.1.2/"),"\nDo the step 6 from the documentation ",(0,l.kt)("a",{parentName:"li",href:"https://docs.xebialabs.com/v.22.1/deploy/how-to/k8s-operator/install-deploy-using-k8s-operator/#step-6download-and-set-up-the-xl-cli"},"Step 6\u2014Download and set up the XL CLI"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f ./xl version\nCLI version:             22.1.2\nGit version:             v22.1.1-0-g3d9c31d\nAPI version XL Deploy:   xl-deploy/v1\nAPI version XL Release:  xl-release/v1\nGit commit:              3d9c31d7985ba22624cc78d48172237875ee6cae\nBuild date:              2022-04-18T12:39:39.622Z\nGO version:              go1.16\nOS/Arch:                 darwin/amd64\n")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"Run the upgrade setup with a dry run and generate the blueprint file:")),(0,l.kt)("p",null,"In the last question ",(0,l.kt)("inlineCode",{parentName:"p"},"Edit list of custom resource keys that will migrate to the new Release CR")," append following keys to the of the file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},".spec.ingress.annotations\n")),(0,l.kt)("p",null,"Here is sample of the responses:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u276f xl op --upgrade --dry-run\n? Select the setup mode? advanced\n? Select the Kubernetes setup where the digitalai Devops Platform will be installed or uninstalled: AzureAKS [Azure AKS]\n? Do you want to use Kubernetes' current-context from ~/.kube/config? Yes\n? Do you want to use an existing Kubernetes namespace? Yes\n? Enter the name of the existing Kubernetes namespace where the XebiaLabs DevOps Platform will be installed, updated or undeployed: default\n? Product server you want to perform upgrade for daiRelease [Digital.ai Release]\n? Enter the repository name(eg: <repositoryName>/<imageName>:<tagName>) xebialabs\n? Enter the image name(eg: <repositoryName>/<imageName>:<tagName>) xl-release\n? Enter the image tag(eg: <repositoryName>/<imageName>:<tagName>) 22.1.2\n? Choose the version of the XL Deploy for Upgrader setup of operator 22.1.2\n? Use embedded keycloak? No\n? Select the type of upgrade you want. operatorToOperator [Operator to Operator]\n? Operator image to use xebialabsunsupported/release-operator:22.1.0-519.949\n? Do you want to use custom operator zip file for Release? Yes\n? Release operator zip to use (absolute path or URL to the zip) /absolute_path_to_provided_zip/release-operator-azure-aks-22.1.0-519.949.zip\n? Enter the name of custom resource. dai-xlr\n? Enter the name of custom resource definition. digitalaireleases.xlr.digital.ai\n? Edit list of custom resource keys that will migrate to the new Release CR <Received>\n")),(0,l.kt)("p",null,"That will create files and directories in the working directory. The main directory is ",(0,l.kt)("inlineCode",{parentName:"p"},"xebialabs")," and inside it are all template files that we need to edit.\nCheck the ",(0,l.kt)("inlineCode",{parentName:"p"},"xebialabs/dai-release/dairelease_cr.yaml")," if all values are correctly set there."),(0,l.kt)("h3",{id:"a3-update-the-release-operator-package-to-support-custom-namespace-common-part"},"A.3. Update the release operator package to support custom namespace (common part)"),(0,l.kt)("p",null,"Update following files (relative to the provider's directory) with custom namespace name:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"File name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Yaml path"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Value to set"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/xl-k8s-foundation.yaml ","[kind: Infrastructure]"),(0,l.kt)("td",{parentName:"tr",align:"left"},"spec","[0]",".children","[0]",".children","[0]",".name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"custom-namespace-1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/xl-k8s-foundation.yaml ","[kind: Infrastructure]"),(0,l.kt)("td",{parentName:"tr",align:"left"},"spec","[0]",".children","[0]",".children","[0]",".namespaceName"),(0,l.kt)("td",{parentName:"tr",align:"left"},"custom-namespace-1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/xl-k8s-foundation.yaml ","[kind: Environments]"),(0,l.kt)("td",{parentName:"tr",align:"left"},"spec","[0]",".children","[0]",".members","[0]"),(0,l.kt)("td",{parentName:"tr",align:"left"},"~Infrastructure/k8s-infra/xlr/custom-namespace-1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/template-generic/cluster-role-digital-proxy-role.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"metadata.name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"custom-namespace-1-xlr-operator-proxy-role")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/template-generic/cluster-role-manager-role.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"metadata.name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"custom-namespace-1-xlr-operator-manager-role")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/template-generic/cluster-role-metrics-reader.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"metadata.name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"custom-namespace-1-xlr-operator-metrics-reader")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/template-generic/leader-election-rolebinding.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"subjects","[0]",".namespace"),(0,l.kt)("td",{parentName:"tr",align:"left"},"custom-namespace-1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/template-generic/manager-rolebinding.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"metadata.name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"custom-namespace-1-xlr-operator-manager-rolebinding")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/template-generic/manager-rolebinding.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"roleRef.name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"custom-namespace-1-xlr-operator-manager-role")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/template-generic/manager-rolebinding.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"subjects","[0]",".namespace"),(0,l.kt)("td",{parentName:"tr",align:"left"},"custom-namespace-1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/template-generic/proxy-rolebinding.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"metadata.name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"custom-namespace-1-xlr-operator-proxy-rolebinding")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/template-generic/proxy-rolebinding.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"roleRef.name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"custom-namespace-1-xlr-operator-proxy-role")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/template-generic/proxy-rolebinding.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"subjects","[0]",".namespace"),(0,l.kt)("td",{parentName:"tr",align:"left"},"custom-namespace-1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/dairelease_cr.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"metadata.name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"dai-xlr-custom-namespace-1")))),(0,l.kt)("p",null,"In the ",(0,l.kt)("inlineCode",{parentName:"p"},"xebialabs/dai-release/template-generic/deployment.yaml")," add ",(0,l.kt)("inlineCode",{parentName:"p"},"env")," section after ",(0,l.kt)("inlineCode",{parentName:"p"},"spec.template.spec.containers[1].image")," (in the same level):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"        env:\n          - name: WATCH_NAMESPACE\n            valueFrom:\n              fieldRef:\n                fieldPath: metadata.namespace\n")),(0,l.kt)("p",null,"In the ",(0,l.kt)("inlineCode",{parentName:"p"},"xebialabs/dai-release-operator.yaml")," delete array element from the ",(0,l.kt)("inlineCode",{parentName:"p"},"spec[0].children[0].deployables"),", where name is ",(0,l.kt)("inlineCode",{parentName:"p"},"name: custom-resource-definition"),".\nThis will not deploy again CRD, as it already exists, when it was deployed for the first time. Example of the element to delete"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'      - name: custom-resource-definition\n        type: k8s.ResourcesFile\n        fileEncodings:\n          ".+\\\\.properties": ISO-8859-1\n        mergePatchType: strategic\n        propagationPolicy: Foreground\n        updateMethod: patch\n        createOrder: "3"\n        modifyOrder: "2"\n        destroyOrder: "1"\n        file: !file "dai-release/template-generic/custom-resource-definition.yaml"\n')),(0,l.kt)("h3",{id:"a4a-update-the-release-operator-package-to-support-custom-namespace---only-in-case-of-nginx-ingress-controller"},"A.4.a. Update the release operator package to support custom namespace - only in case of Nginx ingress controller"),(0,l.kt)("p",null,"Following changes are in case of usage nginx ingress (default behaviour):"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"File name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Yaml path"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Value to set"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/dairelease_cr.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"spec.ingress.annotations.kubernetes.io/ingress.class"),(0,l.kt)("td",{parentName:"tr",align:"left"},"nginx-dai-xlr-custom-namespace-1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/dairelease_cr.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"spec.nginx-ingress-controller.extraArgs.ingress-class"),(0,l.kt)("td",{parentName:"tr",align:"left"},"nginx-dai-xlr-custom-namespace-1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/dairelease_cr.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"spec.nginx-ingress-controller.ingressClass"),(0,l.kt)("td",{parentName:"tr",align:"left"},"nginx-dai-xlr-custom-namespace-1")))),(0,l.kt)("h3",{id:"a4b-update-the-release-operator-package-to-support-custom-namespace---only-in-case-of-haproxy-ingress-controller"},"A.4.b. Update the release operator package to support custom namespace - only in case of Haproxy ingress controller"),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Note:\nTo setup haproxy instead of default nginx configuration that is provided in the operator package you need to do following changes in the\n",(0,l.kt)("inlineCode",{parentName:"p"},"xebialabs/dai-release/dairelease_cr.yaml"),":"),(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spec.haproxy-ingress.install = true")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spec.nginx-ingress-controller.install = false")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'spec.ingress.path = "/"')),(0,l.kt)("li",{parentName:"ul"},"in the ",(0,l.kt)("inlineCode",{parentName:"li"},"spec.ingress.annotations")," replace all ",(0,l.kt)("inlineCode",{parentName:"li"},"nginx.")," settings and put:")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre"},'      kubernetes.io/ingress.class: "haproxy"\n      ingress.kubernetes.io/ssl-redirect: "false"\n      ingress.kubernetes.io/rewrite-target: /\n      ingress.kubernetes.io/affinity: cookie\n      ingress.kubernetes.io/session-cookie-name: JSESSIONID\n      ingress.kubernetes.io/session-cookie-strategy: prefix\n      ingress.kubernetes.io/config-backend: |\n        option httpchk GET /ha/health HTTP/1.0\n')))),(0,l.kt)("p",null,"Following changes are in case of usage haproxy ingress:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"File name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Yaml path"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Value to set"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/dairelease_cr.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"spec.ingress.annotations.kubernetes.io/ingress.class"),(0,l.kt)("td",{parentName:"tr",align:"left"},"haproxy-dai-xlr-custom-namespace-1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"xebialabs/dai-release/dairelease_cr.yaml"),(0,l.kt)("td",{parentName:"tr",align:"left"},"spec.haproxy-ingress.controller.ingressClass"),(0,l.kt)("td",{parentName:"tr",align:"left"},"haproxy-dai-xlr-custom-namespace-1")))),(0,l.kt)("h3",{id:"a5-update-additionally-yaml-files"},"A.5. Update additionally YAML files"),(0,l.kt)("p",null,"Apply all collected changes from the ",(0,l.kt)("inlineCode",{parentName:"p"},"default")," namespace to the CR in the release operator package ",(0,l.kt)("inlineCode",{parentName:"p"},"xebialabs/dai-release/dairelease_cr.yaml"),".\n(The best is to compare new CR ",(0,l.kt)("inlineCode",{parentName:"p"},"xebialabs/dai-release/dairelease_cr.yaml")," with the one from the ",(0,l.kt)("inlineCode",{parentName:"p"},"default")," namespace)"),(0,l.kt)("p",null,"Check the YAML files, and update them with additional changes. For example CR YAML and update it with any missing custom configuration."),(0,l.kt)("p",null,"If you are using your own database and messaging queue setup, setup it in the same way as in the ",(0,l.kt)("inlineCode",{parentName:"p"},"default")," namespace,\nin the new CR in the release operator package ",(0,l.kt)("inlineCode",{parentName:"p"},"xebialabs/dai-release/dairelease_cr.yaml"),".\nDatabase in this case of setup can be reused if there is network visibility in the new namespace where you are moving your installation"),(0,l.kt)("p",null,"For example you can do now OIDC setup, add the following fields with value under spec tag, for enabling oidc in the ",(0,l.kt)("inlineCode",{parentName:"p"},"xebialabs/dai-release/dairelease_cr.yaml")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'spec:\n  oidc:\n    enabled: true\n    accessTokenUri: null\n    clientId: null\n    clientSecret: null\n    emailClaim: null\n    external: true\n    fullNameClaim: null\n    issuer: null\n    keyRetrievalUri: null\n    logoutUri: null\n    postLogoutRedirectUri: null\n    redirectUri: null\n    rolesClaim: null\n    userAuthorizationUri: null\n    userNameClaim: null\n    scopes: ["openid"]\n')),(0,l.kt)("p",null,"Replace nulls with correct values, for more info check ",(0,l.kt)("a",{parentName:"p",href:"https://docs.xebialabs.com/v.22.1/release/concept/xl-release-oidc-authentication/#client-authentication"},"documentation")),(0,l.kt)("h3",{id:"a6-be-sure-to-not-delete-pvs"},"A.6. Be sure to not delete PVs"),(0,l.kt)("p",null,"Do the step from ",(0,l.kt)("a",{parentName:"p",href:"/xl-release-kubernetes-operator/docs/manual/move_pvc_to_other_namespace#c2-be-sure-to-not-delete-pvs-with-your-actions"},"C.2. Be sure to not delete PVs with you actions")),(0,l.kt)("h3",{id:"a7-copy-existing-pvcs-to-the-custom-namespace"},"A.7. Copy existing PVCs to the custom namespace"),(0,l.kt)("p",null,"There are 3 options from the step from ",(0,l.kt)("a",{parentName:"p",href:"/xl-release-kubernetes-operator/docs/manual/move_pvc_to_other_namespace#c4-move-existing-pvc-to-the-custom-namespace"},"C.4. Move existing PVC to the custom namespace"),"\nIn this scenario you can only use:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("h3",{parentName:"li",id:"c4option_1-create-pvc-in-the-custom-namespace-by-copying-pv-data"},"C.4.OPTION_1 Create PVC in the custom namespace by copying PV data")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("h3",{parentName:"li",id:"c4option_3-move-existing-pvc-to-the-custom-namespace-by-csi-volume-cloning"},"C.4.OPTION_3 Move existing PVC to the custom namespace by CSI Volume Cloning"))),(0,l.kt)("h3",{id:"a8-deploy-to-the-custom-namespace"},"A.8. Deploy to the custom namespace"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"We are using here yaml that was result of the upgrade dry-run in the working directory, so we should apply against following file:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"xl apply -f ./xebialabs.yaml\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Do the step 9, 10 and 11 from the documentation ",(0,l.kt)("a",{parentName:"li",href:"https://docs.xebialabs.com/v.22.1/deploy/how-to/k8s-operator/install-deploy-using-k8s-operator/#step-10verify-if-the-deployment-was-successful-1"},"Step 9\u2014Verify the deployment status"))),(0,l.kt)("h3",{id:"a9-apply-any-custom-changes"},"A.9. Apply any custom changes"),(0,l.kt)("p",null,"If you have any custom changes that you collected previously in the step 3.3, you can apply them again in this step in the same way as before on the ",(0,l.kt)("inlineCode",{parentName:"p"},"default")," namespace."),(0,l.kt)("p",null,"Check if PVCs and PVs are reused by the new setup in the custom namespace."),(0,l.kt)("h3",{id:"a10-wrap-up"},"A.10. Wrap-up"),(0,l.kt)("p",null,"Wait for all pods to ready and without any errors. "),(0,l.kt)("p",null,"If you used same host in the new custom namespace to the one that is on the ",(0,l.kt)("inlineCode",{parentName:"p"},"default")," namespace, in that case XLR page is still opening from the ",(0,l.kt)("inlineCode",{parentName:"p"},"default"),"\nnamespace. You need in that case apply step 9.a, after that on the configurated host will be available XLR that is from the new custom namespace."),(0,l.kt)("p",null,"In case of haproxy and one release pod, list of pods should look like following table:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u2502 NAMESPACE\u2191           NAME                                                          READY     RESTARTS STATUS  \u2502\n\u2502 custom-namespace-1   custom-namespace-1-dai-xlr-haproxy-ingress-7df948c7d7-7xcrt   1/1              0 Running \u2502\n\u2502 custom-namespace-1   dai-xlr-digitalai-release-0                                   1/1              0 Running \u2502\n\u2502 custom-namespace-1   dai-xlr-postgresql-0                                          1/1              0 Running \u2502\n\u2502 custom-namespace-1   dai-xlr-rabbitmq-0                                            1/1              0 Running \u2502\n\u2502 custom-namespace-1   xlr-operator-controller-manager-78ff46dbb8-rq45l              2/2              0 Running \u2502    \n")),(0,l.kt)("h4",{id:"a11-destroy-xlr-in-default-namespace"},"A.11. Destroy XLR in default namespace"),(0,l.kt)("p",null,"If you are sure that everything is up and running on the new custom namespace, you can destroy previous setup on the ",(0,l.kt)("inlineCode",{parentName:"p"},"default")," namespace."),(0,l.kt)("p",null,"Do the step from ",(0,l.kt)("a",{parentName:"p",href:"/xl-release-kubernetes-operator/docs/manual/move_pvc_to_other_namespace#c3-stop-everything-that-is-using-xlr-pvc-s-and-other-pvc-if-needed"},"C.3. Stop everything that is using XLR PVC-s")),(0,l.kt)("p",null,"Additionally, you can also cleanup any related PVC in the default namespace and PVs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# be careful if you would like really to delete all PVC-s and related PV-s, backup before delete\n# get pvcs related to XLR on default namespace and delete them (list of the pvcs depends on what is enabled in the deployment)\n\u276f kubectl get pvc -n default\n\u276f kubectl delete -n default pvc data-dai-xlr-rabbitmq-0 ...\n")),(0,l.kt)("p",null,"You can also clean up any configmaps or secrets that are in the ",(0,l.kt)("inlineCode",{parentName:"p"},"default")," namespace and related to the XLR."),(0,l.kt)("p",null,"You also delete all PVs that were connected to the XLR installation in the default namespace, and are not migrated and used by the custom namespace."))}d.isMDXComponent=!0}}]);