"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[620],{8607:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return m},toc:function(){return p},default:function(){return c}});var n=t(7462),l=t(3366),i=(t(7294),t(3905)),r=["components"],o={sidebar_position:14},s=void 0,m={unversionedId:"manual/move_pvc_to_other_namespace",id:"manual/move_pvc_to_other_namespace",isDocsHomePage:!1,title:"move_pvc_to_other_namespace",description:"This is internal documentation. This document can be used only if it was recommended by the Support Team.",source:"@site/docs/manual/move_pvc_to_other_namespace.md",sourceDirName:"manual",slug:"/manual/move_pvc_to_other_namespace",permalink:"/xl-release-kubernetes-operator/docs/manual/move_pvc_to_other_namespace",tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"tutorialSidebar",previous:{title:"change-namespace-for-xlr-10.3-with-downtime",permalink:"/xl-release-kubernetes-operator/docs/manual/change-namespace-for-xlr-10.3-with-downtime"},next:{title:"manual-upgrade-for-xlr-10",permalink:"/xl-release-kubernetes-operator/docs/manual/manual-upgrade-for-xlr-10"}},p=[{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"C.1. Backup everything",id:"c1-backup-everything",children:[],level:2},{value:"C.2. Be sure to not delete PVs with your actions",id:"c2-be-sure-to-not-delete-pvs-with-your-actions",children:[],level:2},{value:"C.3. Stop everything that is using XLR PVC-s (and other PVC if needed)",id:"c3-stop-everything-that-is-using-xlr-pvc-s-and-other-pvc-if-needed",children:[],level:2},{value:"C.4. Move existing PVC to the custom namespace",id:"c4-move-existing-pvc-to-the-custom-namespace",children:[{value:"C.4.OPTION_1 Create PVC in the custom namespace by copying PV data",id:"c4option_1-create-pvc-in-the-custom-namespace-by-copying-pv-data",children:[{value:"C.4.OPTION_1.1 Make the copy of the <code>pvc-dai-xlr-digitalai-release.yaml</code> for the later reference, to the <code>pvc-dai-xlr-digitalai-release-custom-namespace-1.yaml</code>.",id:"c4option_11-make-the-copy-of-the-pvc-dai-xlr-digitalai-releaseyaml-for-the-later-reference-to-the-pvc-dai-xlr-digitalai-release-custom-namespace-1yaml",children:[],level:4},{value:"C.4.OPTION_1.2 Similar procedure do for the default namespace, because PVC in default namespace was deleted",id:"c4option_12-similar-procedure-do-for-the-default-namespace-because-pvc-in-default-namespace-was-deleted",children:[],level:4},{value:"C.4.OPTION_1.3 Start following pods",id:"c4option_13-start-following-pods",children:[],level:4}],level:3},{value:"C.4.OPTION_2 Move existing PVC to the custom namespace by reusing PV",id:"c4option_2-move-existing-pvc-to-the-custom-namespace-by-reusing-pv",children:[{value:"C.4.OPTION_2.1 Make the copy of the <code>pvc-dai-xlr-digitalai-release.yaml</code> for the later reference.",id:"c4option_21-make-the-copy-of-the-pvc-dai-xlr-digitalai-releaseyaml-for-the-later-reference",children:[],level:4},{value:"C.4.OPTION_2.2 On the moved PV for the release you will need to empty some folders, do that with following pod",id:"c4option_22-on-the-moved-pv-for-the-release-you-will-need-to-empty-some-folders-do-that-with-following-pod",children:[],level:4}],level:3},{value:"C.4.OPTION_3 Clone existing PVC to the custom namespace by CSI Volume Cloning",id:"c4option_3-clone-existing-pvc-to-the-custom-namespace-by-csi-volume-cloning",children:[],level:3}],level:2}],d={toc:p};function c(e){var a=e.components,t=(0,l.Z)(e,r);return(0,i.kt)("wrapper",(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This is internal documentation. This document can be used only if it was recommended by the Support Team."))),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This setup is deprecated from the 22.3 version."))),(0,i.kt)("h1",{id:"c-how-to-change-namespace-of-the-pvc"},"C. How to change namespace of the PVC"),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The kubectl command-line tool"),(0,i.kt)("li",{parentName:"ul"},"Access to a Kubernetes cluster with installed Release in the ",(0,i.kt)("inlineCode",{parentName:"li"},"default")," namespace")),(0,i.kt)("p",null,"Tested with:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"xl-release 10.3.9, 22.1.1"),(0,i.kt)("li",{parentName:"ul"},"xl-cli 22.1.1"),(0,i.kt)("li",{parentName:"ul"},"Azure cluster")),(0,i.kt)("h2",{id:"c1-backup-everything"},"C.1. Backup everything"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Before doing any of the following steps backup everything:"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"database data"),(0,i.kt)("li",{parentName:"ul"},"any custom configuration that was done for the operator setup",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"StatefulSets"),(0,i.kt)("li",{parentName:"ul"},"Deployments"),(0,i.kt)("li",{parentName:"ul"},"ConfigMaps"),(0,i.kt)("li",{parentName:"ul"},"Secrets"),(0,i.kt)("li",{parentName:"ul"},"CustomResource"),(0,i.kt)("li",{parentName:"ul"},"anything else that was customized"))),(0,i.kt)("li",{parentName:"ul"},"any volume related to release in the default namespace, for example data from the mounted volumes on the release pod:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-release-server/reports"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-release-server/ext"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-release-server/conf")))))),(0,i.kt)("h2",{id:"c2-be-sure-to-not-delete-pvs-with-your-actions"},"C.2. Be sure to not delete PVs with your actions"),(0,i.kt)("p",null,"Patch the all PVs to set the \u201cpersistentVolumeReclaimPolicy\u201d to \u201cRetain\u201d, for example (if cluster admin's didn't do that already):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'\u276f kubectl get pv\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                                 STORAGECLASS                                   REASON   AGE\npvc-53564205-6e1e-45f0-9dcf-e21adefa6eaf   1Gi        RWO            Delete           Bound    default/dai-xlr-digitalai-release   vp-azure-aks-test-cluster-file-storage-class            6h36m\n...\n\n\u276f kubectl patch pv pvc-53564205-6e1e-45f0-9dcf-e21adefa6eaf -p \'{"spec":{"persistentVolumeReclaimPolicy":"Retain"}}\'\npersistentvolume/pvc-53564205-6e1e-45f0-9dcf-e21adefa6eaf patched\n')),(0,i.kt)("p",null,"Export the current PVCs objects because it will be necessary to recreate the PVCs in a later stage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl get pvc dai-xlr-digitalai-release -n default -o yaml > pvc-dai-xlr-digitalai-release.yaml\n")),(0,i.kt)("p",null,"Iterate on all PVs that are connected to the XLR PVCs in the default namespace, list depends on the installed components.\nFor example, here is list of PVCs that are usually in the default namespace:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"dai-xlr-digitalai-release"),(0,i.kt)("li",{parentName:"ul"},"data-dai-xlr-postgresql-0"),(0,i.kt)("li",{parentName:"ul"},"data-dai-xlr-rabbitmq-0")),(0,i.kt)("p",null,"On the end check if all PVs have correct Reclaim Policy:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl get pv\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                                      STORAGECLASS                                   REASON   AGE\npvc-53564205-6e1e-45f0-9dcf-e21adefa6eaf   1Gi        RWO            Retain           Bound    default/ai-xlr-digitalai-release           vp-azure-aks-test-cluster-file-storage-class            7h\n...\n")),(0,i.kt)("h2",{id:"c3-stop-everything-that-is-using-xlr-pvc-s-and-other-pvc-if-needed"},"C.3. Stop everything that is using XLR PVC-s (and other PVC if needed)"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Be sure that you did backup of the CR before this step!"))),(0,i.kt)("p",null,"If you are sure that everything is backuped and ready for installation on the new custom namespace, you can destroy previous setup on the ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," namespace,\nhere are steps how to do that:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"# get the CR on default namespace and delete it\n\u276f kubectl get digitalaireleases.xlr.digital.ai dai-xlr -n default -o yaml > cr-dai-xlr-default.yaml\n\u276f kubectl delete -n default -f cr-dai-xlr-default.yaml\n\n# get the deployment on default namespace and delete it\n\u276f kubectl get deployment -n default\n\u276f kubectl delete -n default deployment xlr-operator-controller-manager\n\n# get the service on default namespace and delete it\n\u276f kubectl get service -n default\n\u276f kubectl delete -n default service xlr-operator-controller-manager-metrics-service\n\n# get the role on default namespace and delete it\n\u276f kubectl get roles -n default\n\u276f kubectl delete -n default roles xlr-operator-leader-election-role\n\n# get the roleBinding on default namespace and delete it\n\u276f kubectl get roleBinding -n default\n\u276f kubectl delete -n default roleBinding xlr-operator-leader-election-rolebinding\n\n# get clusterRoles related to XLR on default namespace and delete them\n\u276f kubectl get clusterRoles\n\u276f kubectl delete clusterRoles xlr-operator-manager-role xlr-operator-metrics-reader xlr-operator-proxy-role\n\n# get clusterRoleBinding related to XLR on default namespace and delete them\n\u276f kubectl get clusterRoleBinding\n\u276f kubectl delete clusterRoleBinding xlr-operator-proxy-rolebinding xlr-operator-manager-rolebinding\n")),(0,i.kt)("p",null,"Do not delete PVs or PVCs we can reuse them on the new namespace."),(0,i.kt)("h2",{id:"c4-move-existing-pvc-to-the-custom-namespace"},"C.4. Move existing PVC to the custom namespace"),(0,i.kt)("p",null,"Select one option that the best suites for your case."),(0,i.kt)("p",null,"Iterate one of the selected options on all PVs and PVCs that are connected to the XLR PVCs in the default namespace, list depends on the installed components.\nFor example, here is list of PVCs that are usually in the default namespace:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"dai-xlr-digitalai-release - recommended is option C.4.OPTION_1"),(0,i.kt)("li",{parentName:"ul"},"data-dai-xlr-postgresql-0 - if embedded DB is used the best is to use C.4.OPTION_2"),(0,i.kt)("li",{parentName:"ul"},"data-dai-xlr-rabbitmq-0 - if embedded rabbitmq is used you can skip rabbitmq PVC migration, rabbitmq in the new namespace will use new PVC and PV in that case. ")),(0,i.kt)("h3",{id:"c4option_1-create-pvc-in-the-custom-namespace-by-copying-pv-data"},"C.4.OPTION_1 Create PVC in the custom namespace by copying PV data"),(0,i.kt)("h4",{id:"c4option_11-make-the-copy-of-the-pvc-dai-xlr-digitalai-releaseyaml-for-the-later-reference-to-the-pvc-dai-xlr-digitalai-release-custom-namespace-1yaml"},"C.4.OPTION_1.1 Make the copy of the ",(0,i.kt)("inlineCode",{parentName:"h4"},"pvc-dai-xlr-digitalai-release.yaml")," for the later reference, to the ",(0,i.kt)("inlineCode",{parentName:"h4"},"pvc-dai-xlr-digitalai-release-custom-namespace-1.yaml"),"."),(0,i.kt)("p",null,"Edit file ",(0,i.kt)("inlineCode",{parentName:"p"},"pvc-dai-xlr-digitalai-release-custom-namespace-1.yaml"),":"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Delete all the lines under sections:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"status")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"spec.volumneMode")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"spec.volumneName")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.uid")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.resourceVersion")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.ownerReferences")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.namespace")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.creationTimestamp")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.finalizers")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.pv.kubernetes.io/bind-completed")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.pv.kubernetes.io/bound-by-controller"))),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Rename following lines by adding namespace name:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.name")," from dai-xlr-digitalai-release to dai-xlr-custom-namespace-1-digitalai-release"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.labels.release")," from dai-xlr to dai-xlr-custom-namespace-1"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.meta.helm.sh/release-namespace")," from default to custom-namespace-1"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.meta.helm.sh/release-name")," from dai-xlr to dai-xlr-custom-namespace-1\nThe renaming rule is to replace any occurrence of ",(0,i.kt)("inlineCode",{parentName:"li"},"dai-xlr")," with ",(0,i.kt)("inlineCode",{parentName:"li"},"dai-xlr-{{custom_namespace_name}}"))),(0,i.kt)("p",null,"Create those PVCs, but inside the Namespace \u201ccustom-namespace-1\u201d:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl apply -f pvc-dai-xlr-digitalai-release-custom-namespace-1.yaml -n custom-namespace-1\npersistentvolumeclaim/dai-xlr-custom-namespace-1-digitalai-release created\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Check if PVC is bound\nCheck the PVCs state, which will probably in Pending state, and after some time in Bound state:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl get pvc -n custom-namespace-1\nNAME                                           STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS                                   AGE\ndai-xlr-custom-namespace-1-digitalai-release   Bound    pvc-53564205-6e1e-45f0-9dcf-e21adefa6eaf   1Gi        RWO            vp-azure-aks-test-cluster-file-storage-class   3m33s\n")),(0,i.kt)("h4",{id:"c4option_12-similar-procedure-do-for-the-default-namespace-because-pvc-in-default-namespace-was-deleted"},"C.4.OPTION_1.2 Similar procedure do for the default namespace, because PVC in default namespace was deleted"),(0,i.kt)("p",null,"Edit file ",(0,i.kt)("inlineCode",{parentName:"p"},"pvc-dai-xlr-digitalai-release.yaml"),":"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Delete all the lines under sections:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"status")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"spec.volumneMode")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"spec.volumneName")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.uid")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.resourceVersion")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.ownerReferences")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.namespace")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.creationTimestamp")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.finalizers")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.pv.kubernetes.io/bind-completed")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.pv.kubernetes.io/bound-by-controller"))),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Create those PVCs, but inside the Namespace \u201cdefault\u201d:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl apply -f pvc-dai-xlr-digitalai-release.yaml -n default\npersistentvolumeclaim/dai-xlr-digitalai-release created\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Check if PVC is bound\nCheck the PVCs state, which will probably in Pending state, and after some time in Bound state:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl get pvc -n default\nNAME                                           STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS                                   AGE\ndai-xlr-digitalai-release   Bound    pvc-53564205-6e1e-45f0-9dcf-e21adefa6eaf   1Gi        RWO            vp-azure-aks-test-cluster-file-storage-class   3m33s\n")),(0,i.kt)("h4",{id:"c4option_13-start-following-pods"},"C.4.OPTION_1.3 Start following pods"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Put following in file ",(0,i.kt)("inlineCode",{parentName:"li"},"pod-dai-pv-access-custom-namespace-1.yaml")," (don't forget to update custom-namespace-1 with real namespace name):")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: dai-pv-access-custom-namespace-1\nspec:\n  containers:\n    - name: sleeper\n      command: ["sleep", "1d"]\n      image: xebialabs/tiny-tools:22.2.0\n      imagePullPolicy: Always\n      volumeMounts:\n        - mountPath: /opt/xebialabs/xl-release-server/reports\n          name: reports-dir\n          subPath: reports\n        - mountPath: /opt/xebialabs/xl-release-server/work\n          name: reports-dir\n          subPath: work\n        - mountPath: /opt/xebialabs/xl-release-server/conf\n          name: reports-dir\n          subPath: conf\n        - mountPath: /opt/xebialabs/xl-release-server/ext\n          name: reports-dir\n          subPath: ext\n        - mountPath: /opt/xebialabs/xl-release-server/hotfix\n          name: reports-dir\n          subPath: hotfix\n        - mountPath: /opt/xebialabs/xl-release-server/hotfix/lib\n          name: reports-dir\n          subPath: lib\n        - mountPath: /opt/xebialabs/xl-release-server/hotfix/plugins\n          name: reports-dir\n          subPath: plugins\n        - mountPath: /opt/xebialabs/xl-release-server/log\n          name: reports-dir\n          subPath: log\n  restartPolicy: Never\n  volumes:\n    - name: reports-dir\n      persistentVolumeClaim:\n        claimName: dai-xlr-custom-namespace-1-digitalai-release\n')),(0,i.kt)("p",null,"Update the claimName with correct name!"),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Start the pod")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl apply -f pod-dai-pv-access-custom-namespace-1.yaml -n custom-namespace-1\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Put following in file ",(0,i.kt)("inlineCode",{parentName:"li"},"pod-dai-pv-access.yaml")," for the default namespace:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: dai-pv-access\nspec:\n  containers:\n    - name: sleeper\n      command: ["sleep", "1d"]\n      image: xebialabs/tiny-tools:22.2.0\n      imagePullPolicy: Always\n      volumeMounts:\n        - mountPath: /opt/xebialabs/xl-release-server/reports\n          name: reports-dir\n          subPath: reports\n        - mountPath: /opt/xebialabs/xl-release-server/work\n          name: reports-dir\n          subPath: work\n        - mountPath: /opt/xebialabs/xl-release-server/conf\n          name: reports-dir\n          subPath: conf\n        - mountPath: /opt/xebialabs/xl-release-server/ext\n          name: reports-dir\n          subPath: ext\n        - mountPath: /opt/xebialabs/xl-release-server/hotfix\n          name: reports-dir\n          subPath: hotfix\n        - mountPath: /opt/xebialabs/xl-release-server/hotfix/lib\n          name: reports-dir\n          subPath: lib\n        - mountPath: /opt/xebialabs/xl-release-server/hotfix/plugins\n          name: reports-dir\n          subPath: plugins\n        - mountPath: /opt/xebialabs/xl-release-server/log\n          name: reports-dir\n          subPath: log\n  restartPolicy: Never\n  volumes:\n    - name: reports-dir\n      persistentVolumeClaim:\n        claimName: dai-xlr-digitalai-release\n')),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Start the pod")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl apply -f pod-dai-pv-access.yaml -n default\n")),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},"Copy data from one pod to ")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl exec -n default dai-pv-access -- tar cf - \\\n    /opt/xebialabs/xl-release-server/ext \\\n    /opt/xebialabs/xl-release-server/reports \\\n    | kubectl exec -n custom-namespace-1 -i dai-pv-access-custom-namespace-1 -- tar xvf - -C /\n")),(0,i.kt)("ol",{start:6},(0,i.kt)("li",{parentName:"ol"},"Chmod of the moved folder")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl exec -n custom-namespace-1 -i dai-pv-access-custom-namespace-1 -- chmod -R 777 /opt/xebialabs/xl-release-server/reports/\nkubectl exec -n custom-namespace-1 -i dai-pv-access-custom-namespace-1 -- chmod -R 777 /opt/xebialabs/xl-release-server/ext/\n")),(0,i.kt)("ol",{start:7},(0,i.kt)("li",{parentName:"ol"},"Delete the pods")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl delete pod dai-pv-access-custom-namespace-1 -n custom-namespace-1\n\u276f kubectl delete pod dai-pv-access -n default\n")),(0,i.kt)("h3",{id:"c4option_2-move-existing-pvc-to-the-custom-namespace-by-reusing-pv"},"C.4.OPTION_2 Move existing PVC to the custom namespace by reusing PV"),(0,i.kt)("p",null,"Following option will reuse PV in the new namespace, rollback of the option is more complicated. "),(0,i.kt)("p",null,"Delete all the current PVCs in the namespace ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," if they still exist (on older version from 22.2 dai-xlr-digitalai-release PVC will not exist):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl delete pvc dai-xlr-digitalai-release -n default\n")),(0,i.kt)("p",null,"See that the related PV Status will be changed from ",(0,i.kt)("inlineCode",{parentName:"p"},"Bound")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"Released"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl get pv pvc-53564205-6e1e-45f0-9dcf-e21adefa6eaf\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS     CLAIM                                 STORAGECLASS                                   REASON   AGE\npvc-53564205-6e1e-45f0-9dcf-e21adefa6eaf   1Gi        RWO            Retain           Released   digitalai/dai-xlr-digitalai-release   vp-azure-aks-test-cluster-file-storage-class            7h36m\n")),(0,i.kt)("p",null,"Edit each one of the PVs to remove the old references with claim:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl edit pv pvc-53564205-6e1e-45f0-9dcf-e21adefa6eaf\n")),(0,i.kt)("p",null,"Remove lines like following example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'...\nclaimRef:\n    apiVersion: v1\n    kind: PersistentVolumeClaim\n    name: dai-xlr-digitalai-release\n    namespace: default\n    resourceVersion: "23284462"\n    uid: 53564205-6e1e-45f0-9dcf-e21adefa6eaf\n...\n')),(0,i.kt)("p",null,"Check that there are no references anymore in the CLAIM column:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl get pv pvc-53564205-6e1e-45f0-9dcf-e21adefa6eaf\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS                                   REASON   AGE\npvc-53564205-6e1e-45f0-9dcf-e21adefa6eaf   1Gi        RWO            Retain           Available           vp-azure-aks-test-cluster-file-storage-class            8h\n")),(0,i.kt)("h4",{id:"c4option_21-make-the-copy-of-the-pvc-dai-xlr-digitalai-releaseyaml-for-the-later-reference"},"C.4.OPTION_2.1 Make the copy of the ",(0,i.kt)("inlineCode",{parentName:"h4"},"pvc-dai-xlr-digitalai-release.yaml")," for the later reference."),(0,i.kt)("p",null,"Edit file ",(0,i.kt)("inlineCode",{parentName:"p"},"pvc-dai-xlr-digitalai-release.yaml"),":"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Delete all the lines under section:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"status")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.namespace")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.uid")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.resourceVersion")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.creationTimestamp")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.finalizers")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.pv.kubernetes.io/bind-completed")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.pv.kubernetes.io/bound-by-controller")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.ownerReferences"))),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Rename following lines by adding namespace name:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.name")," from dai-xlr-digitalai-release to dai-xlr-custom-namespace-1-digitalai-release"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.labels.release")," from dai-xlr to dai-xlr-custom-namespace-1"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.meta.helm.sh/release-namespace")," from default to custom-namespace-1"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.meta.helm.sh/release-name")," from dai-xlr to dai-xlr-custom-namespace-1\nThe renaming rule is to replace any occurrence of ",(0,i.kt)("inlineCode",{parentName:"li"},"dai-xlr")," with ",(0,i.kt)("inlineCode",{parentName:"li"},"dai-xlr-{{custom_namespace_name}}"))),(0,i.kt)("p",null,"Create those PVCs again, but inside the Namespace \u201ccustom-namespace-1\u201d:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl apply -f pvc-dai-xlr-digitalai-release.yaml -n custom-namespace-1\npersistentvolumeclaim/dai-xlr-custom-namespace-1-digitalai-release created\n")),(0,i.kt)("p",null,"Check the PVCs state, which will probably in Pending state, and after some time in Bound state:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl get pvc -n custom-namespace-1\nNAME                                           STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS                                   AGE\ndai-xlr-custom-namespace-1-digitalai-release   Bound    pvc-53564205-6e1e-45f0-9dcf-e21adefa6eaf   1Gi        RWO            vp-azure-aks-test-cluster-file-storage-class   3m33s\n")),(0,i.kt)("h4",{id:"c4option_22-on-the-moved-pv-for-the-release-you-will-need-to-empty-some-folders-do-that-with-following-pod"},"C.4.OPTION_2.2 On the moved PV for the release you will need to empty some folders, do that with following pod"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Put following in file ",(0,i.kt)("inlineCode",{parentName:"li"},"pod-dai-pv-access-custom-namespace-1.yaml")," (don't forget to update custom-namespace-1 with real namespace name):")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: dai-pv-access-custom-namespace-1\nspec:\n  containers:\n    - name: sleeper\n      command: ["sleep", "1d"]\n      image: xebialabs/tiny-tools:22.2.0\n      imagePullPolicy: Always\n      volumeMounts:\n        - mountPath: /opt/xebialabs/xl-release-server/reports\n          name: reports-dir\n          subPath: reports\n        - mountPath: /opt/xebialabs/xl-release-server/work\n          name: reports-dir\n          subPath: work\n        - mountPath: /opt/xebialabs/xl-release-server/conf\n          name: reports-dir\n          subPath: conf\n        - mountPath: /opt/xebialabs/xl-release-server/ext\n          name: reports-dir\n          subPath: ext\n        - mountPath: /opt/xebialabs/xl-release-server/hotfix\n          name: reports-dir\n          subPath: hotfix\n        - mountPath: /opt/xebialabs/xl-release-server/hotfix/lib\n          name: reports-dir\n          subPath: lib\n        - mountPath: /opt/xebialabs/xl-release-server/hotfix/plugins\n          name: reports-dir\n          subPath: plugins\n        - mountPath: /opt/xebialabs/xl-release-server/log\n          name: reports-dir\n          subPath: log\n  restartPolicy: Never\n  volumes:\n    - name: reports-dir\n      persistentVolumeClaim:\n        claimName: dai-xlr-custom-namespace-1-digitalai-release\n')),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Start the pod")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl apply -f pod-dai-pv-access-custom-namespace-1.yaml -n custom-namespace-1\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Empty following folders from the pod:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-release-server/work"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-release-server/conf"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-release-server/hotfix"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-release-server/hotfix/lib"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-release-server/hotfix/plugins")),(0,i.kt)("p",null,"Example for the work folder:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f kubectl exec -n custom-namespace-1 -i dai-pv-access-custom-namespace-1 -- sh -c "rm -fr /opt/xebialabs/xl-release-server/conf/*"\n')),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Delete the pod")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl delete pod dai-pv-access-custom-namespace-1 -n custom-namespace-1\n")),(0,i.kt)("p",null,"Iterate on other PVs (for example you can migrate on the same way DB data if you are not using external Postgres, or if you are doing some other way of DB data migration)."),(0,i.kt)("h3",{id:"c4option_3-clone-existing-pvc-to-the-custom-namespace-by-csi-volume-cloning"},"C.4.OPTION_3 Clone existing PVC to the custom namespace by CSI Volume Cloning"),(0,i.kt)("p",null,"Please check following document if this option is possible for your Persisted Volume setup (there are some limitations when it is possible):"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/storage/volume-pvc-datasource/"},"CSI Volume Cloning")))}c.isMDXComponent=!0}}]);