"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[30],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,k=u["".concat(s,".").concat(d)]||u[d]||m[d]||l;return n?a.createElement(k,i(i({ref:t},p),{},{components:n})):a.createElement(k,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4389:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],o={sidebar_position:1},s="On Premises",c={unversionedId:"manual/onprem",id:"manual/onprem",isDocsHomePage:!1,title:"On Premises",description:"Here you will find a recipe of manual actions how to set up k8s cluster for Release locally with help of an operator.",source:"@site/docs/manual/onprem.md",sourceDirName:"manual",slug:"/manual/onprem",permalink:"/xl-release-kubernetes-operator/docs/manual/onprem",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/xl-release-kubernetes-operator/docs/intro"},next:{title:"Updating configuration files",permalink:"/xl-release-kubernetes-operator/docs/manual/updating-configuration-files"}},p=[{value:"Troubleshooting",id:"troubleshooting",children:[],level:2},{value:"Uninstall",id:"uninstall",children:[],level:2}],m={toc:p};function u(e){var t=e.components,o=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"on-premises"},"On Premises"),(0,l.kt)("p",null,"Here you will find a recipe of manual actions how to set up k8s cluster for Release locally with help of an operator.\nThis document will describe how to do it on ",(0,l.kt)("inlineCode",{parentName:"p"},"minikube"),". If you use another tool, you might need to do it a bit differently."),(0,l.kt)("p",null,"Prerequisites:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"minikube\n",(0,l.kt)("a",{parentName:"li",href:"https://minikube.sigs.k8s.io/docs/start/"},"https://minikube.sigs.k8s.io/docs/start/")),(0,l.kt)("li",{parentName:"ol"},"kubectl\n",(0,l.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/"},"https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/"))),(0,l.kt)("p",null,"If you already had installed minikube as docker based, first you might have to clean it up with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"minikube stop; minikube delete \ndocker stop $(docker ps -aq) \nrm -rf ~/.kube ~/.minikube \nsudo rm -rf /usr/local/bin/localkube /usr/local/bin/minikube\nsudo rm -rf /etc/kubernetes/ \ndocker system prune -af --volumes\n")),(0,l.kt)("p",null,"Example:\nBased on the resource you have you can update the memory and cpus config."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"minikube start --cpus=4 --memory=10240MB --kubernetes-version=v1.20.0\n")),(0,l.kt)("p",null,"for compatability make sure, kebernetes version and kubectl version are same."),(0,l.kt)("p",null,"Execute the below command to check version"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"kubectl version\n")),(0,l.kt)("p",null,"output will be like"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},'Client Version: version.Info{Major:"1", Minor:"20", GitVersion:"v1.20.0", GitCommit:"af46c47ce925f4c4ad5cc8d1fca46c7b77d13b38", GitTreeState:"clean", BuildDate:"2020-12-08T17:59:43Z", GoVersion:"go1.15.5", Compiler:"gc", Platform:"linux/amd64"}\nServer Version: version.Info{Major:"1", Minor:"20", GitVersion:"v1.20.0", GitCommit:"af46c47ce925f4c4ad5cc8d1fca46c7b77d13b38", GitTreeState:"clean", BuildDate:"2020-12-08T17:51:19Z", GoVersion:"go1.15.5", Compiler:"gc", Platform:"linux/amd64"}\n')),(0,l.kt)("p",null,"We will need Ingress, so we have to install addons to enable it, as it doesn't come with a default setup:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"minikube addons enable ingress -p k120\nminikube addons enable ingress-dns -p k120\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Add the ip and host in /etc/hosts with the hostname provided in the dairelease_cr.yaml\nTo find the ip check with `minikube ip`\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Create some folder where you can copy and configure the setup. For example ",(0,l.kt)("inlineCode",{parentName:"li"},"xlr-operator-setup"),"."),(0,l.kt)("li",{parentName:"ul"},"Copy ",(0,l.kt)("inlineCode",{parentName:"li"},"config")," folder to ",(0,l.kt)("inlineCode",{parentName:"li"},"xlr-operator-setup"),". You need only the next 11 files, the rest you can remove:")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"center"},"Path"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"cluster-role-digital-proxy-role.yaml"),(0,l.kt)("td",{parentName:"tr",align:"center"},"config/rbac/auth_proxy_role.yaml")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"cluster-role-manager-role.yaml"),(0,l.kt)("td",{parentName:"tr",align:"center"},"config/rbac/role.yaml")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"cluster-role-metrics-reader.yaml"),(0,l.kt)("td",{parentName:"tr",align:"center"},"config/rbac/auth_proxy_client_clusterrole.yaml")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"controller-manager-metrics-service.yaml"),(0,l.kt)("td",{parentName:"tr",align:"center"},"config/rbac/auth_proxy_service.yaml")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"custom-resource-definition.yaml"),(0,l.kt)("td",{parentName:"tr",align:"center"},"config/crd/bases/xld.my.domain_xldeployhelmcharts.yaml")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"deployment.yaml"),(0,l.kt)("td",{parentName:"tr",align:"center"},"config/default/manager_auth_proxy_patch.yaml")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"leader-election-role.yaml"),(0,l.kt)("td",{parentName:"tr",align:"center"},"config/rbac/leader_election_role.yaml")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"leader-election-rolebinding.yaml"),(0,l.kt)("td",{parentName:"tr",align:"center"},"config/rbac/leader_election_role_binding.yaml")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"manager-rolebinding.yaml"),(0,l.kt)("td",{parentName:"tr",align:"center"},"config/rbac/role_binding.yaml")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"proxy-rolebinding.yaml"),(0,l.kt)("td",{parentName:"tr",align:"center"},"config/rbac/auth_proxy_role_binding.yaml")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"dairelease_cr.yaml"),(0,l.kt)("td",{parentName:"tr",align:"center"},"config/samples/xld_v1alpha1_digitalairelease.yaml")))),(0,l.kt)("p",null,"That mapping has to be applied in ",(0,l.kt)("inlineCode",{parentName:"p"},"applications.yaml")," file. There you can find 10 references to a file, which initially points to a template (paths needs to be relative). Example:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'file: !file "kubernetes/template/manager-rolebinding.yaml"')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Next step is to configure locally Deploy. Make sure, that you have installed Kubernetes plugin."),(0,l.kt)("li",{parentName:"ul"},"First we will manually create infrastructure CI in Deploy to make sure, that provided values are working against a local\ncluster. I will describe how to do it for a ",(0,l.kt)("inlineCode",{parentName:"li"},"minikube"),", so if you are using something else, some technical details can\nbe a bit different, but the idea is the same.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Start creating CI with type k8s.Master ",(0,l.kt)("img",{alt:"k8s master ci creation",src:n(7085).Z})),(0,l.kt)("li",{parentName:"ul"},"Fill in ",(0,l.kt)("inlineCode",{parentName:"li"},"API server URL")," field:\n",(0,l.kt)("img",{alt:"api server url",src:n(4085).Z}),"\nTo find your server API and Ca cert:\nview ~/.kube/config\n",(0,l.kt)("img",{alt:"api server url and ca location",src:n(5751).Z})),(0,l.kt)("li",{parentName:"ul"},"Next 3 fields are regarding the certifications. Therefore we have first to find the place where they are located. As\nit depends on which profile is activated. Check it with a command ",(0,l.kt)("inlineCode",{parentName:"li"},"minikube profile"),". For example for me, the active profile\nis ",(0,l.kt)("inlineCode",{parentName:"li"},"minikube"),", and my certificates are located at:")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"ll cd ~/.minikube/profiles/minikube \ncheck for apiserver.crt, apiserver.key\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"apiserver cert and key",src:n(5842).Z})),(0,l.kt)("p",null,"Knowing all this information, we can fill in next fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"center"},"Field name"),(0,l.kt)("th",{parentName:"tr",align:"center"},"Path to the cert"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"caCert"),(0,l.kt)("td",{parentName:"tr",align:"center"},"~/.minikube/ca.crt")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"tlsCert"),(0,l.kt)("td",{parentName:"tr",align:"center"},"~/.minikube/profiles/minikube/apiserver.crt")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"tlsPrivateKey"),(0,l.kt)("td",{parentName:"tr",align:"center"},"~/.minikube/profiles/minikube/apiserver.key")))),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"You have to provide in the field not a path, but a content.",(0,l.kt)("br",{parentName:"p"}),"\n","Example: ",(0,l.kt)("img",{alt:"k8s-cert-fill-in-example",src:n(5477).Z})))),(0,l.kt)("p",null,'After that we have to verify if the provided configuration is correct, and we can connect to the cluster. For that\nwe will use a control task "Check Connection".\n',(0,l.kt)("img",{alt:"k8s-check-connection",src:n(9546).Z})),(0,l.kt)("p",null,"If everything configured correctly, you should see something like this:\n",(0,l.kt)("img",{alt:"k8s-successful-connection",src:n(6251).Z})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"After this success we are ready to fill in the next Yaml file ",(0,l.kt)("inlineCode",{parentName:"p"},"infrastructure.yaml"),"\nFill in here these 4 fields: ",(0,l.kt)("inlineCode",{parentName:"p"},"apiServerURL"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"caCert"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"tlsCert")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"tlsPrivateKey"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Next step is to verify that no mistakes happened during copy-pasting to ",(0,l.kt)("inlineCode",{parentName:"p"},"infrastructure.yaml"),". For that we need to use\n",(0,l.kt)("a",{parentName:"p",href:"https://docs.xebialabs.com/v.10.2/deploy/concept/get-started-with-devops-as-code/"},"As Code")," feature\nof Deploy to create CIs with help of ",(0,l.kt)("a",{parentName:"p",href:"https://docs.xebialabs.com/v.10.2/deploy/how-to/install-the-xl-cli/"},"XL CLI"),".\nPlease check ",(0,l.kt)("a",{parentName:"p",href:"https://docs.xebialabs.com/v.10.2/deploy/how-to/install-the-xl-cli/"},"XL CLI")," how to install it.\nRun ",(0,l.kt)("inlineCode",{parentName:"p"},"xl apply -f infrastructure.yaml")," by being in the same directory, or specify the full path to the file. In case you\nhave non-default URL, you have to add this parameter: ",(0,l.kt)("inlineCode",{parentName:"p"},"--xl-deploy-url YOUR_XL_DEPLOY_URL"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Next thing to tailor few parameters on the file ",(0,l.kt)("inlineCode",{parentName:"p"},"dairelease_cr.yaml"),". Copy xlr_v1alpha1_digitalairelease.yaml from scaffolding folder (you can find it in ",(0,l.kt)("inlineCode",{parentName:"p"},"config/samples")," folder) to ",(0,l.kt)("inlineCode",{parentName:"p"},"xl-release-kubernetes-operator/release-operator-onprem/digitalai-release/kubernetes/")," folder."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Define or comment  ",(0,l.kt)("inlineCode",{parentName:"li"},"KeystorePassphrase")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"RepositoryKeystore")),(0,l.kt)("li",{parentName:"ul"},"Change StorageClass to what you have. For example, you can use 'standard', in case of using local file system.\nIt depends ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/xebialabs/xl-release-kubernetes-helm-chart/blob/master/README.md"},"how you configured it"),"."),(0,l.kt)("li",{parentName:"ul"},"Define your license in ",(0,l.kt)("inlineCode",{parentName:"li"},"xlrLicense")," field, by converting ",(0,l.kt)("inlineCode",{parentName:"li"},"xl-release-license.lic")," file's content to base64."),(0,l.kt)("li",{parentName:"ul"},"Define ",(0,l.kt)("inlineCode",{parentName:"li"},"RepositoryKeystore")," as ",(0,l.kt)("inlineCode",{parentName:"li"},"zs7OzgAAAAIAAAABAAAAAwAWZGVwbG95aXQtcGFzc3N3b3JkLWtleQAAAX0FGMZRrO0ABXNyADNjb20uc3VuLmNyeXB0by5wcm92aWRlci5TZWFsZWRPYmplY3RGb3JLZXlQcm90ZWN0b3LNV8pZ5zC7UwIAAHhyABlqYXZheC5jcnlwdG8uU2VhbGVkT2JqZWN0PjY9psO3VHACAARbAA1lbmNvZGVkUGFyYW1zdAACW0JbABBlbmNyeXB0ZWRDb250ZW50cQB+AAJMAAlwYXJhbXNBbGd0ABJMamF2YS9sYW5nL1N0cmluZztMAAdzZWFsQWxncQB+AAN4cHVyAAJbQqzzF/gGCFTgAgAAeHAAAAARMA8ECHAyz3pefALRAgMDDUB1cQB+AAUAAACQb6Y2JUQqkd5PtdwIAKEWNiVMcTnIS85U7FsvOb+b+xfOCV8+disezZCQ2f4F6YVGRO++u+NXd0YNDn/eXwge4w7i4ewNBydpMSTpVJieJA3nhh7mvUktatsAV+H7EcGYeMPx/cAlkqyFUHuiGz9p1ft3pxmxey2Uyt/FiBgAiV2hZAj14vGdSoRsMH8qN5ECdAAWUEJFV2l0aE1ENUFuZFRyaXBsZURFU3QAFlBCRVdpdGhNRDVBbmRUcmlwbGVERVO9rqwVmysM6czWLFdUj1+Xh1hxHQ=="),". (It's a working dummy example, you are free to use what you wish)"),(0,l.kt)("li",{parentName:"ul"},"Define ",(0,l.kt)("inlineCode",{parentName:"li"},"KeystorePassphrase")," as ",(0,l.kt)("inlineCode",{parentName:"li"},"deployit"),". (It's a working dummy example, you are free to use what you wish)"),(0,l.kt)("li",{parentName:"ul"},'Change namespaces in all yaml files to "default", instead of "system"'),(0,l.kt)("li",{parentName:"ul"},"Change for all ",(0,l.kt)("inlineCode",{parentName:"li"},"kind: ServiceAccount")," the name to ",(0,l.kt)("inlineCode",{parentName:"li"},"default"),"."),(0,l.kt)("li",{parentName:"ul"},"Replace the content of ",(0,l.kt)("inlineCode",{parentName:"li"},"manager_auth_proxy_patch.yaml")," to:")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    control-plane: controller-manager\n  name: xlr-operator-controller-manager\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      control-plane: controller-manager\n  template:\n    metadata:\n      labels:\n        control-plane: controller-manager\n    spec:\n      containers:\n        - name: kube-rbac-proxy\n          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0\n          args:\n            - "--secure-listen-address=0.0.0.0:8443"\n            - "--upstream=http://127.0.0.1:8080/"\n            - "--logtostderr=true"\n            - "--v=10"\n          ports:\n            - containerPort: 8443\n              name: https\n        - name: manager\n          args:\n            - "--health-probe-bind-address=:8081"\n            - "--metrics-bind-address=127.0.0.1:8080"\n            - "--leader-elect"\n            - "--leader-election-id=xld-operator-controller-manager"\n          image: xebialabs/xlr-operator:1.0.0\n          livenessProbe:\n            httpGet:\n              path: /readyz\n              port: 8081\n            initialDelaySeconds: 15\n            periodSeconds: 20\n          readinessProbe:\n            httpGet:\n              path: /healthz\n              port: 8081\n            initialDelaySeconds: 5\n            periodSeconds: 10\n          resources:\n            limits:\n              cpu: 100m\n              memory: 90Mi\n            requests:\n              cpu: 100m\n              memory: 60Mi\n      terminationGracePeriodSeconds: 10\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Now you are ready to run the complete configuration with:\n",(0,l.kt)("inlineCode",{parentName:"li"},"xl apply -v -f digital-ai.yaml"))),(0,l.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,l.kt)("p",null,"###After successful deployment you can check the pod instances\n",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl get all"),"\nThe output should show the running pods with ready state\n",(0,l.kt)("img",{alt:"Successful deployment",src:n(3097).Z})),(0,l.kt)("p",null,"If pods are getting restarted check pvc status. If all are in bound state, then mostly because of resource constraint."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"kubectl get pvc\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Successful state",src:n(5618).Z})),(0,l.kt)("p",null,"To avoid the resource constraint, check the following options"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Increase the memory and cpu resources while starting the minikube"),(0,l.kt)("li",{parentName:"ol"},"Reduce the number of replica set for operator instance, rabbitmq and for other resources.")),(0,l.kt)("p",null,"To check the logs of the pods"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"kubctl logs --follow <pod name>\n")),(0,l.kt)("h2",{id:"uninstall"},"Uninstall"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Perform undeploy of operator in Digital.ai Deploy"),(0,l.kt)("li",{parentName:"ul"},"Remove manually all other CIs left in Deploy"),(0,l.kt)("li",{parentName:"ul"},"Clean PVCs manually")))}u.isMDXComponent=!0},4085:function(e,t,n){t.Z=n.p+"assets/images/api-server-url-bead8067e4be135f5071f383764425e2.png"},5842:function(e,t,n){t.Z=n.p+"assets/images/cert-key-a04676ceb361c11fd5ef5e149e16d526.png"},5477:function(e,t,n){t.Z=n.p+"assets/images/k8s-cert-fill-in-example-c3099acaa871279301e936eb469020e4.png"},9546:function(e,t,n){t.Z=n.p+"assets/images/k8s-check-connection-545b3242b3694f957d8e0d13388b2f9e.png"},6251:function(e,t,n){t.Z=n.p+"assets/images/k8s-successful-connection-7a08a9e6587128cce89499ac3ca2367d.png"},7085:function(e,t,n){t.Z=n.p+"assets/images/k8smaster-ci-creation-fd6d16b1c743d1e1c60ac6e133f925c5.png"},5751:function(e,t,n){t.Z=n.p+"assets/images/kube-config-ac86376fc8386e35f6bafbe4293e2f23.png"},5618:function(e,t,n){t.Z=n.p+"assets/images/pvc-state-b927581b8f0cde1611b38529beb5213e.png"},3097:function(e,t,n){t.Z=n.p+"assets/images/successful-deployment-f7ee0486495e2976d87ca6ee248dbaad.png"}}]);